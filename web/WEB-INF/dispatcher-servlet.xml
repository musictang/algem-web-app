<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

  <!--SUPPORT DES ANNOTATIONS -->
  <mvc:annotation-driven validator="validator" />
  <!--SUPPORT DES ANNOTATIONS DE TRANSACTION -->
  <tx:annotation-driven />
  <context:component-scan base-package="net.algem" />

  <!--MAPPING DES RESSOURCES STATIQUES (css, img, etc.) -->
  <!-- Le paramètre location permet de définir un répertoire implicite
  On utilisera @{/resources/themes/css/common.css} et non @{/resources/themes/css/default/common.css}
  L'interface est ainsi facilement thémable : il suffit de remplacer default par le nouveau thème.
  Ce comportement ne semble pas fonctionner avec spring 3.0.6-->
  <mvc:resources mapping="/resources/common/**" location="/resources/common/"/>
  <mvc:resources mapping="/resources/themes/**" location="/resources/themes/gray/"/>
  <!-- Localization of hibernate messages during validation!-->
  <bean id="validationMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="basename" value="/WEB-INF/resources/validation" />
  </bean>

  <bean name="validator"  class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    <property name="validationMessageSource">
      <ref bean="validationMessageSource"/>
    </property>
  </bean>

  <!--THYMELEAF-->
  <!--En dev p:cacheable="false"-->
  <bean id="templateResolver" class="org.thymeleaf.spring3.templateresolver.SpringResourceTemplateResolver"
        p:prefix="/tpl/"
        p:suffix=".html"
        p:templateMode="HTML"
        p:characterEncoding="UTF-8"
        p:cacheable="false"
  />

  <bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
    <property name="templateResolver" ref="templateResolver" />
    <property name="additionalDialects">
      <set>
        <!--<bean class="nz.net.ultraq.thymeleaf.LayoutDialect" />-->
        <bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect"/>
      </set>
    </property>
  </bean>

  <bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
    <property name="templateEngine" ref="templateEngine" />
    <property name="order" value="1" />
    <property name="viewNames" value="*" />
    <property name="characterEncoding" value="UTF-8" />
  </bean>

</beans>
